# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
  
    - name: Build with Gradle
      run: ./gradlew bootJar
    
    - name: Docker build and push image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/ci-cd-practice .
        docker push ${{ secrets.DOCKER_USERNAME }}/ci-cd-practice
      
    - name: Pull docker image and deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVICE_HOST }}
        key: ${{ secrets.SERVICE_KEY }}
        port: ${{ secrets.SERVICE_PORT }}
        username: ${{ secrets.SERVICE_USERNAME }}
        scripts: |
          docker rm -f $(docker ps -qa)
          docker pull ${{ secrets.DOCKER_USERNAME }}/ci-cd-practice
          
          echo "${{ secrets.PROPERTIES_PROD }}" > application-prod.yml
          docker cp application-prod.yml ci-cd-practice:/.
          
          docker-compose up -d
