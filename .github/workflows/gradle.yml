# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |  
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle
      run: |
        ./gradlew bootJar
        export hello world

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Docker build and push image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/ci-cd-practice .
        docker push ${{ secrets.DOCKER_USERNAME }}/ci-cd-practice
        echo ${hello}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Deploy application
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVICE_HOST }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.SERVICE_PORT }}
        username: root
        script: |
          echo ${{ secrets.APPLICATION_PROD }} > ./config/application-prod.yml
          ./deploy.sh
